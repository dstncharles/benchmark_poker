{"version":3,"sources":["vendor/ember-cli/app-prefix.js","benchmark-poker/adapters/comment.js","benchmark-poker/adapters/user.js","benchmark-poker/app.js","benchmark-poker/authenticators/parse-email.js","benchmark-poker/authorizers/parse.js","benchmark-poker/components/chartist-chart.js","benchmark-poker/controllers/chips-in-play.js","benchmark-poker/controllers/comment.js","benchmark-poker/controllers/dashboard.js","benchmark-poker/controllers/discuss.js","benchmark-poker/controllers/login.js","benchmark-poker/controllers/pre-flop-raise.js","benchmark-poker/controllers/register.js","benchmark-poker/initializers/app-version.js","benchmark-poker/initializers/current-user.js","benchmark-poker/initializers/ember-magic-man.js","benchmark-poker/initializers/export-application-global.js","benchmark-poker/initializers/simple-auth.js","benchmark-poker/models/comment.js","benchmark-poker/models/user.js","benchmark-poker/router.js","benchmark-poker/routes/application.js","benchmark-poker/routes/chips-in-play.js","benchmark-poker/routes/dashboard.js","benchmark-poker/routes/discuss.js","benchmark-poker/routes/index.js","benchmark-poker/routes/login.js","benchmark-poker/routes/pre-flop-raise.js","benchmark-poker/routes/register.js","benchmark-poker/templates/application.js","benchmark-poker/templates/chips-in-play.js","benchmark-poker/templates/components/chartist-chart.js","benchmark-poker/templates/dashboard.js","benchmark-poker/templates/discuss.js","benchmark-poker/templates/index.js","benchmark-poker/templates/login.js","benchmark-poker/templates/pre-flop-raise.js","benchmark-poker/templates/register.js","benchmark-poker/tests/adapters/comment.jshint.js","benchmark-poker/tests/adapters/user.jshint.js","benchmark-poker/tests/app.jshint.js","benchmark-poker/tests/authenticators/parse-email.jshint.js","benchmark-poker/tests/authorizers/parse.jshint.js","benchmark-poker/tests/controllers/chips-in-play.jshint.js","benchmark-poker/tests/controllers/comment.jshint.js","benchmark-poker/tests/controllers/dashboard.jshint.js","benchmark-poker/tests/controllers/discuss.jshint.js","benchmark-poker/tests/controllers/login.jshint.js","benchmark-poker/tests/controllers/pre-flop-raise.jshint.js","benchmark-poker/tests/controllers/register.jshint.js","benchmark-poker/tests/helpers/resolver.js","benchmark-poker/tests/helpers/resolver.jshint.js","benchmark-poker/tests/helpers/start-app.js","benchmark-poker/tests/helpers/start-app.jshint.js","benchmark-poker/tests/initializers/current-user.jshint.js","benchmark-poker/tests/models/comment.jshint.js","benchmark-poker/tests/models/user.jshint.js","benchmark-poker/tests/router.jshint.js","benchmark-poker/tests/routes/application.jshint.js","benchmark-poker/tests/routes/chips-in-play.jshint.js","benchmark-poker/tests/routes/dashboard.jshint.js","benchmark-poker/tests/routes/discuss.jshint.js","benchmark-poker/tests/routes/index.jshint.js","benchmark-poker/tests/routes/login.jshint.js","benchmark-poker/tests/routes/pre-flop-raise.jshint.js","benchmark-poker/tests/routes/register.jshint.js","benchmark-poker/tests/test-helper.js","benchmark-poker/tests/test-helper.jshint.js","benchmark-poker/tests/unit/adapters/chips-in-play-test.js","benchmark-poker/tests/unit/adapters/chips-in-play-test.jshint.js","benchmark-poker/tests/unit/adapters/register-test.js","benchmark-poker/tests/unit/adapters/register-test.jshint.js","benchmark-poker/tests/unit/controllers/bankroll-test.js","benchmark-poker/tests/unit/controllers/bankroll-test.jshint.js","benchmark-poker/tests/unit/controllers/chipsinplay-test.js","benchmark-poker/tests/unit/controllers/chipsinplay-test.jshint.js","benchmark-poker/tests/unit/controllers/comment-test.js","benchmark-poker/tests/unit/controllers/comment-test.jshint.js","benchmark-poker/tests/unit/controllers/dashboard-test.js","benchmark-poker/tests/unit/controllers/dashboard-test.jshint.js","benchmark-poker/tests/unit/controllers/discuss-test.js","benchmark-poker/tests/unit/controllers/discuss-test.jshint.js","benchmark-poker/tests/unit/controllers/equity-test.js","benchmark-poker/tests/unit/controllers/equity-test.jshint.js","benchmark-poker/tests/unit/controllers/hands-test.js","benchmark-poker/tests/unit/controllers/hands-test.jshint.js","benchmark-poker/tests/unit/controllers/location-test.js","benchmark-poker/tests/unit/controllers/location-test.jshint.js","benchmark-poker/tests/unit/controllers/login-test.js","benchmark-poker/tests/unit/controllers/login-test.jshint.js","benchmark-poker/tests/unit/controllers/opponents-test.js","benchmark-poker/tests/unit/controllers/opponents-test.jshint.js","benchmark-poker/tests/unit/controllers/pre-flop-raise-test.js","benchmark-poker/tests/unit/controllers/pre-flop-raise-test.jshint.js","benchmark-poker/tests/unit/controllers/register-test.js","benchmark-poker/tests/unit/controllers/register-test.jshint.js","benchmark-poker/tests/unit/initializers/current-user-test.js","benchmark-poker/tests/unit/initializers/current-user-test.jshint.js","benchmark-poker/tests/unit/models/register-test.js","benchmark-poker/tests/unit/models/register-test.jshint.js","benchmark-poker/tests/unit/routes/adapter-test.js","benchmark-poker/tests/unit/routes/adapter-test.jshint.js","benchmark-poker/tests/unit/routes/application-test.js","benchmark-poker/tests/unit/routes/application-test.jshint.js","benchmark-poker/tests/unit/routes/bankroll-test.js","benchmark-poker/tests/unit/routes/bankroll-test.jshint.js","benchmark-poker/tests/unit/routes/dashboard-test.js","benchmark-poker/tests/unit/routes/dashboard-test.jshint.js","benchmark-poker/tests/unit/routes/discuss-test.js","benchmark-poker/tests/unit/routes/discuss-test.jshint.js","benchmark-poker/tests/unit/routes/equity-test.js","benchmark-poker/tests/unit/routes/equity-test.jshint.js","benchmark-poker/tests/unit/routes/hands-test.js","benchmark-poker/tests/unit/routes/hands-test.jshint.js","benchmark-poker/tests/unit/routes/index-test.js","benchmark-poker/tests/unit/routes/index-test.jshint.js","benchmark-poker/tests/unit/routes/location-test.js","benchmark-poker/tests/unit/routes/location-test.jshint.js","benchmark-poker/tests/unit/routes/login-test.js","benchmark-poker/tests/unit/routes/login-test.jshint.js","benchmark-poker/tests/unit/routes/opponents-test.js","benchmark-poker/tests/unit/routes/opponents-test.jshint.js","benchmark-poker/tests/unit/routes/pre-flop-raise-test.js","benchmark-poker/tests/unit/routes/pre-flop-raise-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('benchmark-poker/adapters/comment', ['exports', 'ember', 'ic-ajax'], function (exports, Ember, ajax) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Object.extend({\n    findAll: function findAll(name) {\n      /* jshint unused: false */\n      return ajax['default'](\"https://api.parse.com/1/classes/Comment?include=createdBy\").then(function (response) {\n        return response.results.map(function (comment) {\n          comment.id = comment.objectId;\n          delete comment.objectId;\n          return comment;\n        });\n      });\n    },\n\n    save: function save(type, record) {\n      if (record.id) {\n        return ajax['default']({\n          url: \"https://api.parse.com/1/classes/Comment/\" + record.id + \"?include=createdBy\",\n          type: \"PUT\",\n          data: JSON.stringify(record.toJSON())\n        }).then(function (response) {\n          record.updatedAt = response.updatedAt;\n          return record;\n        });\n      } else {\n        return ajax['default']({\n          url: \"https://api.parse.com/1/classes/Comment\",\n          type: \"POST\",\n          data: JSON.stringify(record.toJSON())\n        }).then(function (response) {\n          record.id = response.objectId;\n          record.createdAt = response.createdAt;\n          return record;\n        });\n      }\n    },\n\n    destroy: function destroy(name, record) {\n      /* jshint unused: false */\n      return ajax['default']({\n        url: \"https://api.parse.com/1/classes/Comment/\" + record.id,\n        type: \"DELETE\"\n      });\n    } });\n\n});","define('benchmark-poker/adapters/user', ['exports', 'ic-ajax', 'ember'], function (exports, ajax, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Object.extend({\n\n    save: function save(type, record) {\n      if (record.id) {\n        return ajax['default']({\n          url: \"https://api.parse.com/1/users\" + record.id,\n          type: \"PUT\",\n          data: JSON.stringify(record)\n        }).then(function (response) {\n          record.updatedAt = response.updatedAt;\n          return record;\n        });\n      } else {\n        return ajax['default']({\n          url: \"https://api.parse.com/1/users\",\n          type: \"POST\",\n          data: JSON.stringify(record)\n        }).then(function (response) {\n          record.id = response.objectId;\n          record.createdAt = response.createdAt;\n          record.sessionToken = response.sessionToken;\n          return record;\n        });\n      }\n    }\n  });\n\n});","define('benchmark-poker/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'benchmark-poker/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('benchmark-poker/authenticators/parse-email', ['exports', 'ic-ajax', 'simple-auth/authenticators/base', 'ember'], function (exports, ajax, Base, Ember) {\n\n  'use strict';\n\n  exports['default'] = Base['default'].extend({\n    sessionToken: null,\n\n    restore: function restore(data) {\n      this.set(\"sessionToken\", data.sessionToken);\n      return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n        if (!Ember['default'].isEmpty(data.sessionToken)) {\n          resolve(data);\n        } else {\n          reject();\n        }\n      });\n    },\n\n    authenticate: function authenticate(credentials) {\n      var token = credentials.sessionToken;\n      if (token) {\n        this.set(\"sessionToken\", token);\n      }\n      var endpoint = token ? \"users/me\" : \"login\";\n      var options = token ? {} : {\n        data: {\n          username: credentials.identification,\n          password: credentials.password\n        }\n      };\n\n      return ajax['default'](\"https://api.parse.com/1/\" + endpoint, options).then((function (response) {\n        this.set(\"sessionToken\", response.sessionToken);\n        return { sessionToken: response.sessionToken };\n      }).bind(this));\n    },\n\n    invalidate: function invalidate() {\n      this.set(\"sessionToken\", null);\n      return Ember['default'].RSVP.resolve();\n    }\n  });\n\n});","define('benchmark-poker/authorizers/parse', ['exports', 'ember', 'simple-auth/authorizers/base', 'benchmark-poker/config/environment'], function (exports, Ember, Base, ENV) {\n\n  'use strict';\n\n  exports['default'] = Base['default'].extend({\n    authorize: function authorize(jqXHR) {\n      jqXHR.setRequestHeader(\"X-Parse-Application-Id\", ENV['default'].parseKeys.applicationId);\n      jqXHR.setRequestHeader(\"X-Parse-REST-API-Key\", ENV['default'].parseKeys.restApi);\n\n      var sessionToken = this.get(\"session.sessionToken\");\n      if (!Ember['default'].isEmpty(sessionToken)) {\n        jqXHR.setRequestHeader(\"X-Parse-Session-Token\", sessionToken);\n      }\n    }\n  });\n\n});","define('benchmark-poker/components/chartist-chart', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var UNDEF,\n\n  // This is the structure that chartist is expecting\n  defaultDataStructure = { labels: [], series: [] };\n\n  exports['default'] = Ember['default'].Component.extend({\n    chart: UNDEF,\n\n    classNameBindings: [\"ratio\"],\n    classNames: [\"ct-chart\"],\n\n    // The ratio of the chart as it scales up/down in size.\n    //\n    // Available ratios:\n    //\n    // name              ratio\n    // ct-square         1\n    // ct-minor-second   15:16\n    // ct-major-second   8:9\n    // ct-minor-third    5:6\n    // ct-major-third    4:5\n    // ct-perfect-fourth 3:4\n    // ct-perfect-fifth  2:3\n    // ct-minor-sixth    5:8\n    // ct-golden-section 1:1.618\n    // ct-major-sixth    3:5\n    // ct-minor-seventh  9:16\n    // ct-major-seventh  8:15\n    // ct-octave         1:2\n    // ct-major-tenth    2:5\n    // ct-major-eleventh 3:8\n    // ct-major-twelfth  1:3\n    // ct-double-octave  1:4\n    ratio: \"ct-square\",\n\n    type: \"line\",\n    chartType: (function () {\n      return this.get(\"type\").capitalize();\n    }).property(\"type\"),\n\n    data: defaultDataStructure,\n    options: UNDEF,\n    responsiveOptions: UNDEF,\n    updateOnData: true,\n\n    // This is where the business happens. This will only run if checkForReqs\n    // doesn't find any problems.\n    renderChart: (function () {\n      var chart = new (Chartist[this.get(\"chartType\")])(this.get(\"element\"), this.get(\"data\"), this.get(\"options\"), this.get(\"responsiveOptions\"));\n\n      this.set(\"chart\", chart);\n    }).on(\"didInsertElement\"),\n\n    onData: (function () {\n      if (this.get(\"updateOnData\")) {\n        this.get(\"chart\").update(this.get(\"data\"));\n      }\n    }).observes(\"data\"),\n\n    // Before trying to do anything else, let's check to see if any necessary\n    // attributes are missing or if anything else is fishy about attributes\n    // provided to the component in the template.\n    //\n    // We're doing this to help ease people into this project. Instead of just\n    // getting some \"uncaught exception\" we're hoping these error messages will\n    // point them in the right direction.\n    checkForReqs: (function () {\n      var data = this.get(\"data\"),\n          type = this.get(\"type\");\n\n      if (typeof data === \"string\") {\n        console.info(\"Chartist-chart: The value of the \\\"data\\\" attribute on should be an object, it's a string.\");\n        this.set(\"data\", defaultDataStructure);\n      }\n\n      if (!type || !Chartist[this.get(\"chartType\")]) {\n        console.info(\"Chartist-chart: Invalid or missing \\\"type\\\" attribute, defaulting to \\\"line\\\".\");\n        this.set(\"type\", \"line\");\n      }\n    }).on(\"init\")\n  });\n\n});","define('benchmark-poker/controllers/chips-in-play', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    // TODO: make this look like the format below\n    stackSizes: (function () {\n      return this.get(\"model.chips\").mapBy(\"seatsInfo\").map(function (handSeats) {\n        //pluck(mapBy)\n        return handSeats.mapBy(\"stackSize\").reduce(function (sum, stackSize) {\n          // Number(stackSize) transforms stackSize from a string to a number\n          return sum + Number(stackSize);\n        }, 0);\n      });\n    }).property(\"model.chips.@each\"),\n\n    handCount: Ember['default'].computed.alias(\"model.chips.length\") });\n\n});","define('benchmark-poker/controllers/comment', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    isEditing: false,\n\n    actions: {\n      edit: function edit() {\n        this.set(\"isEditing\", true);\n      },\n\n      save: function save() {\n        this.set(\"isEditing\", false);\n        this.get(\"model\").save();\n      }\n    }\n  });\n\n});","define('benchmark-poker/controllers/dashboard', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    stackSizes: (function () {\n      var data = this.get(\"model.chips\").mapBy(\"seatsInfo\").map(function (handSeats) {\n\n        //pluck(mapBy)\n        return handSeats.mapBy(\"stackSize\").reduce(function (sum, stackSize) {\n          // Number(stackSize) transforms stackSize from a string to a number\n          return sum + Number(stackSize);\n        }, 0);\n      });\n\n      return {\n        labels: this.get(\"handRange\"),\n        series: [data]\n      };\n    }).property(\"model.chips.@each\"),\n\n    handRange: (function () {\n      var n = this.get(\"handCount\");\n      // range starts at 0, so add 1 to n and remove the first element\n      var range = Array.apply(null, { length: n + 1 }).map(Number.call, Number);\n      range.shift();\n      return range;\n    }).property(\"handCount\"),\n\n    handCount: Ember['default'].computed.alias(\"model.chips.length\"),\n\n    raisers: (function () {\n      // 1. get an array of arrays of preflopActions\n      // 2. extract array of arrays of player names who have raised\n      // 3. flatten (2) into a single array of names\n      // 4. group names by count e.g. {person1: 5, person2: 6}\n      var data = this.get(\"model.raises\").mapBy(\"preflopActions\").map(function (flopActions) {\n\n        flopActions = flopActions || [];\n        return flopActions.filterBy(\"action\", \"raises\").mapBy(\"player\");\n      }).reduce(function (acc, raisers) {\n        return acc.concat(raisers);\n      }, []).reduce(function (acc, raiser) {\n        acc[raiser] = acc[raiser] || 0;\n        acc[raiser] += 1;\n        return acc;\n      }, {});\n\n      return {\n        labels: Object.keys(data),\n        series: [Ember['default'].$.map(data, function (count) {\n          return count;\n        })]\n      };\n    }).property(\"model.raises.@each\"),\n\n    actions: {\n      /*\n      saveFirstName: function(){\n        var newFirstName = this.store.createRecord('firstName', {\n          body: this.get('newFirstName')\n        });\n        this.set('newFirstName', '');\n        return newFirstName.save();\n      }, */\n\n      saveComment: function saveComment() {\n        var newComment = this.store.createRecord(\"comment\", {\n          body: this.get(\"newComment\"),\n          createdBy: this.get(\"session.currentUser\")\n        });\n        this.set(\"newComment\", \"\");\n        return newComment.save();\n      },\n\n      destroyComment: function destroyComment(comment) {\n        comment.destroy();\n      } },\n\n    chartOptions: {\n      width: \"980px\",\n      height: \"500px\",\n\n      showArea: true,\n      lineSmooth: false,\n\n      axisX: {\n        showGrid: false\n      }\n    }\n\n  });\n\n});","define('benchmark-poker/controllers/discuss', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('benchmark-poker/controllers/login', ['exports', 'ember', 'simple-auth/mixins/login-controller-mixin'], function (exports, Ember, LoginControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(LoginControllerMixin['default'], {\n    authenticator: \"authenticator:parse-email\"\n  });\n\n});","define('benchmark-poker/controllers/pre-flop-raise', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    playerAggression: (function () {\n      // 1. get an array of arrays of preflopActions\n      // 2. extract array of arrays of player names who have raised\n      // 3. flatten (2) into a single array of names\n      // 4. group names by count e.g. {person1: 5, person2: 6}\n      return this.get(\"model\").mapBy(\"preflopActions\").map(function (flopActions) {\n\n        flopActions = flopActions || [];\n        return flopActions.filterBy(\"action\", \"raises\").mapBy(\"player\");\n      }).reduce(function (acc, raisers) {\n        return acc.concat(raisers);\n      }, []).reduce(function (acc, raiser) {\n        acc[raiser] = acc[raiser] || 0;\n        acc[raiser] += 1;\n        return acc;\n      }, {});\n    }).property(\"model.@each\") });\n  // .map(function(playersSeats){\n  //   return playersSeats.mapBy('player').map(function()};\n\n  //get player and his actions\n  //filter the actions have raise and allin\n  //the sum the actions in new array\n\n});","define('benchmark-poker/controllers/register', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    actions: {\n      save: function save() {\n        var self = this;\n        var user = this.get(\"model\");\n        user.username = user.email;\n        user.save().then(function () {\n          self.get(\"session\").authenticate(\"authenticator:parse-email\", user);\n        });\n      }\n    }\n  });\n\n});","define('benchmark-poker/initializers/app-version', ['exports', 'benchmark-poker/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function initialize(container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('benchmark-poker/initializers/current-user', ['exports', 'ember', 'simple-auth/session', 'ic-ajax'], function (exports, Ember, Session, ajax) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container) {\n    Session['default'].reopen({\n      setCurrentUser: (function () {\n        var token = this.get(\"sessionToken\");\n\n        if (this.get(\"isAuthenticated\") && !Ember['default'].isEmpty(token)) {\n          var store = container.lookup(\"store:main\");\n          ajax['default'](\"https://api.parse.com/1/users/me\").then((function (response) {\n            response.id = response.objectId;\n            delete response.objectId;\n            delete response.sessionToken;\n            var user = store.push(\"user\", response);\n            this.set(\"currentUser\", user);\n          }).bind(this));\n        }\n      }).observes(\"sessionToken\")\n    });\n  }\n\n  exports['default'] = {\n    name: \"current-user\",\n    initialize: initialize\n  };\n\n});","define('benchmark-poker/initializers/ember-magic-man', ['exports', 'ember-magic-man/store'], function (exports, Store) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    application.register(\"store:main\", Store['default']);\n\n    application.inject(\"route\", \"store\", \"store:main\");\n    application.inject(\"controller\", \"store\", \"store:main\");\n    application.inject(\"model\", \"store\", \"store:main\");\n  }\n\n  exports['default'] = {\n    name: \"ember-magic-man\",\n    initialize: initialize\n  };\n\n});","define('benchmark-poker/initializers/export-application-global', ['exports', 'ember', 'benchmark-poker/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('benchmark-poker/initializers/simple-auth', ['exports', 'simple-auth/configuration', 'simple-auth/setup', 'benchmark-poker/config/environment'], function (exports, Configuration, setup, ENV) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: \"simple-auth\",\n    initialize: function initialize(container, application) {\n      Configuration['default'].load(container, ENV['default'][\"simple-auth\"] || {});\n      setup['default'](container, application);\n    }\n  };\n\n});","define('benchmark-poker/models/comment', ['exports', 'ember-magic-man/model'], function (exports, Model) {\n\n  'use strict';\n\n  exports['default'] = Model['default'].extend({\n    toJSON: function toJSON() {\n      var data = this._super();\n\n      var userId = this.get(\"createdBy.id\");\n      if (userId) {\n        data.set(\"createdBy\", {\n          __type: \"Pointer\",\n          className: \"_User\",\n          objectId: userId\n        });\n      }\n\n      return data;\n    }\n  });\n\n});","define('benchmark-poker/models/user', ['exports', 'ember-magic-man/model'], function (exports, Model) {\n\n\t'use strict';\n\n\texports['default'] = Model['default'].extend({});\n\n});","define('benchmark-poker/router', ['exports', 'ember', 'benchmark-poker/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route(\"dashboard\");\n    this.route(\"opponents\");\n    this.route(\"location\");\n    this.route(\"bankroll\");\n    this.route(\"equity\");\n    this.route(\"chipsInPlay\");\n    this.route(\"preFlopRaise\");\n    this.route(\"login\");\n    this.route(\"register\");\n    this.route(\"discuss\");\n  });\n\n  exports['default'] = Router;\n\n});","define('benchmark-poker/routes/application', ['exports', 'ember', 'simple-auth/mixins/application-route-mixin'], function (exports, Ember, ApplicationRouteMixin) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend(ApplicationRouteMixin['default'], {});\n\n});","define('benchmark-poker/routes/chips-in-play', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('benchmark-poker/routes/dashboard', ['exports', 'ember', 'ic-ajax'], function (exports, Ember, ajax) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return Ember['default'].RSVP.hash({\n        chips: this.findChipsInPlay(),\n        raises: this.findRaises(),\n        comments: this.store.findAll(\"comment\")\n\n      });\n    },\n\n    findChipsInPlay: function findChipsInPlay() {\n      return ajax['default'](\"https://random-hands.herokuapp.com/hands/1\").then(function (data) {\n        // data is an array of snapshots of the hand history after each hand is played\n\n        // gameData is the last game snapshot at the end of the game\n        //   and contains all the hands with all actions\n        var gameData = data.slice(-1).pop();\n\n        // some of the hands are messed up. We'll filter those out by return only the hands that have seatsInfo\n        var cleanData = gameData.filterBy(\"seatsInfo\");\n        return cleanData;\n      });\n    },\n\n    findRaises: function findRaises() {\n      return ajax['default'](\"https://random-hands.herokuapp.com/hands/1\").then(function (data) {\n        // data is an array of snapshots of the hand history after each hand is played\n\n        // gameData is the last game snapshot at the end of the game\n        //   and contains all the hands with all actions\n        var gameData = data.slice(-1).pop();\n\n        // some of the hands are messed up. We'll filter those out by return only the hands that have seatsInfo\n        var cleanData = gameData.filterBy(\"seatsInfo\");\n        return cleanData;\n      });\n    }\n  });\n\n});","define('benchmark-poker/routes/discuss', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.findAll(\"comment\");\n    }\n  });\n\n});","define('benchmark-poker/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('benchmark-poker/routes/login', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('benchmark-poker/routes/pre-flop-raise', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return Ember['default'].$.ajax(\"https://random-hands.herokuapp.com/hands/1\").then(function (data) {\n        // data is an array of snapshots of the hand history after each hand is played\n\n        // gameData is the last game snapshot at the end of the game\n        //   and contains all the hands with all actions\n        var gameData = data.slice(-1).pop();\n\n        // some of the hands are messed up. We'll filter those out by return only the hands that have seatsInfo\n        var cleanData = gameData.filterBy(\"seatsInfo\");\n        return cleanData;\n      });\n    }\n  });\n\n});","define('benchmark-poker/routes/register', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.createRecord(\"user\");\n    } });\n\n});","define('benchmark-poker/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('benchmark-poker/templates/chips-in-play', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n          content(env, morph0, context, \"size\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"# of hands: \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,-1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),0,-1);\n        content(env, morph0, context, \"handCount\");\n        block(env, morph1, context, \"each\", [get(env, context, \"stackSizes\")], {\"keyword\": \"size\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('benchmark-poker/templates/components/chartist-chart', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('benchmark-poker/templates/dashboard', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Logout \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element4 = dom.childAt(fragment, [1]);\n          element(env, element4, context, \"action\", [\"invalidateSession\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Login \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element3 = dom.childAt(fragment, [1]);\n          element(env, element3, context, \"action\", [\"authenticateSession\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"class\",\"comment-delete\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            var el2 = dom.createTextNode(\"Save\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element2 = dom.childAt(fragment, [3]);\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n            inline(env, morph0, context, \"input\", [], {\"value\": get(env, context, \"comment.model.body\")});\n            element(env, element2, context, \"action\", [\"save\", get(env, context, \"comment\")], {});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"class\",\"comment-edit\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            var el2 = dom.createTextNode(\"Edit\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"class\",\"comment-delete\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            var el2 = dom.createTextNode(\"Delete\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [5]);\n            var element1 = dom.childAt(fragment, [7]);\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n            var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),-1,-1);\n            content(env, morph0, context, \"comment.model.createdBy.firstName\");\n            content(env, morph1, context, \"comment.model.body\");\n            element(env, element0, context, \"action\", [\"edit\", get(env, context, \"comment\")], {});\n            element(env, element1, context, \"action\", [\"destroyComment\", get(env, context, \"comment\")], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"comments\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"comment.isEditing\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"header\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"header-logo\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"ribbon\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"login\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"Chips in Play Over \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" Hands\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"chipsInPlay\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"Aggressive Players Over \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" Hands\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"preFlopRaise\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"comment-module\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"commentBox\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        dom.setAttribute(el3,\"class\",\"form-container\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"comment-box\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"button\");\n        dom.setAttribute(el4,\"class\",\"comment-button\");\n        dom.setAttribute(el4,\"type\",\"submit\");\n        var el5 = dom.createTextNode(\"Submit\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        dom.setAttribute(el2,\"class\",\"comment-ul\");\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"footer\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"img\");\n        dom.setAttribute(el2,\"src\",\"assets/images/cards.png\");\n        dom.setAttribute(el2,\"alt\",\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"footer-container\");\n        var el3 = dom.createTextNode(\"\\n        Benchmark Poker Inc.\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content, inline = hooks.inline, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element5 = dom.childAt(fragment, [11]);\n        var element6 = dom.childAt(element5, [1, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 3, 1]),0,1);\n        var morph1 = dom.createMorphAt(fragment,1,2,contextualElement);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [3]),0,1);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [5]),0,1);\n        var morph4 = dom.createMorphAt(dom.childAt(fragment, [7]),0,1);\n        var morph5 = dom.createMorphAt(dom.childAt(fragment, [9]),0,1);\n        var morph6 = dom.createMorphAt(dom.childAt(element6, [1]),0,1);\n        var morph7 = dom.createMorphAt(dom.childAt(element5, [3]),0,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"session.isAuthenticated\")], {}, child0, child1);\n        content(env, morph1, context, \"x-login\");\n        content(env, morph2, context, \"handCount\");\n        inline(env, morph3, context, \"chartist-chart\", [], {\"options\": get(env, context, \"chartOptions\"), \"ratio\": \"ct-octave\", \"type\": \"line\", \"data\": get(env, context, \"stackSizes\")});\n        content(env, morph4, context, \"handCount\");\n        inline(env, morph5, context, \"chartist-chart\", [], {\"options\": get(env, context, \"chartOptions\"), \"ratio\": \"ct-octave\", \"type\": \"bar\", \"data\": get(env, context, \"raisers\")});\n        element(env, element6, context, \"action\", [\"saveComment\"], {\"on\": \"submit\"});\n        inline(env, morph6, context, \"textarea\", [], {\"id\": \"new-comment\", \"value\": get(env, context, \"newComment\"), \"autoresize\": true, \"maxHeight\": 200, \"required\": true, \"placeholder\": \"Insert a comment here...\"});\n        block(env, morph7, context, \"each\", [get(env, context, \"model.comments\")], {\"itemController\": \"comment\", \"keyword\": \"comment\"}, child2, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('benchmark-poker/templates/discuss', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"class\",\"comment-delete\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            var el2 = dom.createTextNode(\"Save\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element2 = dom.childAt(fragment, [3]);\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n            inline(env, morph0, context, \"input\", [], {\"value\": get(env, context, \"comment.model.body\")});\n            element(env, element2, context, \"action\", [\"save\", get(env, context, \"comment\")], {});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"class\",\"comment-edit\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            var el2 = dom.createTextNode(\"Edit\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"class\",\"comment-delete\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            var el2 = dom.createTextNode(\"Delete\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [3]);\n            var element1 = dom.childAt(fragment, [5]);\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n            content(env, morph0, context, \"comment.model.body\");\n            element(env, element0, context, \"action\", [\"edit\", get(env, context, \"comment\")], {});\n            element(env, element1, context, \"action\", [\"destroyComment\", get(env, context, \"comment\")], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          block(env, morph0, context, \"if\", [get(env, context, \"comment.isEditing\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        dom.setAttribute(el1,\"class\",\"form-container\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"class\",\"comment-button\");\n        dom.setAttribute(el2,\"type\",\"submit\");\n        var el3 = dom.createTextNode(\"Submit\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element3 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element3,0,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),0,-1);\n        element(env, element3, context, \"action\", [\"saveComment\"], {\"on\": \"submit\"});\n        inline(env, morph0, context, \"textarea\", [], {\"value\": get(env, context, \"newComment\")});\n        block(env, morph1, context, \"each\", [get(env, context, \"model\")], {\"itemController\": \"comment\", \"keyword\": \"comment\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('benchmark-poker/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Logout \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          element(env, element1, context, \"action\", [\"invalidateSession\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Login \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"action\", [\"authenticateSession\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"header\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"header-logo\");\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"ribbon\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"login\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"index-div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"index-pic\");\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"\\n  Benchmark Poker is a stats app that helps you communicate with your friends about your favorite poker games!\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"footer\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"img\");\n        dom.setAttribute(el2,\"src\",\"assets/images/cards.png\");\n        dom.setAttribute(el2,\"alt\",\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"footer-container\");\n        var el3 = dom.createTextNode(\"\\n    Benchmark Poker Inc.\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 3, 1]),0,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"session.isAuthenticated\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('benchmark-poker/templates/login', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"type\",\"submit\");\n          var el2 = dom.createTextNode(\"Register\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"login-container\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"login-logo\");\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"login-img\");\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"login-form\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"form\");\n        var el5 = dom.createTextNode(\"\\n\\n            \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n            \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n            \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"submit\");\n        var el6 = dom.createTextNode(\"Login\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, element = hooks.element, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var element0 = dom.childAt(fragment, [2, 3, 1, 1]);\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        var morph1 = dom.createMorphAt(element0,0,1);\n        var morph2 = dom.createMorphAt(element0,1,2);\n        var morph3 = dom.createMorphAt(element0,4,5);\n        content(env, morph0, context, \"outlet\");\n        element(env, element0, context, \"action\", [\"authenticate\"], {\"on\": \"submit\"});\n        inline(env, morph1, context, \"input\", [], {\"value\": get(env, context, \"identification\"), \"placeholder\": \"Enter Email\", \"type\": \"email\"});\n        inline(env, morph2, context, \"input\", [], {\"value\": get(env, context, \"password\"), \"placeholder\": \"Enter Password\", \"type\": \"password\"});\n        block(env, morph3, context, \"link-to\", [\"register\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('benchmark-poker/templates/pre-flop-raise', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,1);\n          content(env, morph0, context, \"size\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"# of hands: \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,-1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),0,-1);\n        var morph2 = dom.createMorphAt(fragment,3,4,contextualElement);\n        content(env, morph0, context, \"handCount\");\n        block(env, morph1, context, \"each\", [get(env, context, \"playerAggression\")], {\"keyword\": \"size\"}, child0, null);\n        content(env, morph2, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('benchmark-poker/templates/register', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"fieldset\");\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"reg-form\");\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"user-type\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"select\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"option\");\n        dom.setAttribute(el6,\"value\",\"Customer\");\n        var el7 = dom.createTextNode(\"Customer\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"option\");\n        dom.setAttribute(el6,\"value\",\"Contractor\");\n        var el7 = dom.createTextNode(\"Contractor\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"reg-button\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"button\");\n        dom.setAttribute(el4,\"class\",\"reg-button\");\n        var el5 = dom.createTextNode(\"Submit\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, element = hooks.element, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var element0 = dom.childAt(fragment, [2]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element1, [1]);\n        var element3 = dom.childAt(element1, [3, 1]);\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        var morph1 = dom.createMorphAt(element2,2,3);\n        var morph2 = dom.createMorphAt(element2,3,4);\n        var morph3 = dom.createMorphAt(element2,4,5);\n        var morph4 = dom.createMorphAt(element2,5,6);\n        content(env, morph0, context, \"outlet\");\n        element(env, element0, context, \"action\", [\"save\"], {\"on\": \"submit\"});\n        inline(env, morph1, context, \"input\", [], {\"type\": \"text\", \"name\": \"email\", \"placeholder\": \"Email Address\", \"value\": get(env, context, \"model.email\"), \"required\": true});\n        inline(env, morph2, context, \"input\", [], {\"type\": \"password\", \"name\": \"password\", \"placeholder\": \"Choose Password\", \"value\": get(env, context, \"model.password\"), \"required\": true});\n        inline(env, morph3, context, \"input\", [], {\"type\": \"text\", \"name\": \"firstName\", \"placeholder\": \"First Name\", \"value\": get(env, context, \"model.firstName\"), \"required\": true});\n        inline(env, morph4, context, \"input\", [], {\"type\": \"text\", \"name\": \"lastName\", \"placeholder\": \"Last Name\", \"value\": get(env, context, \"model.lastName\"), \"required\": true});\n        element(env, element3, context, \"action\", [\"save\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('benchmark-poker/tests/adapters/comment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/comment.js should pass jshint', function() { \n    ok(true, 'adapters/comment.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/adapters/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/user.js should pass jshint', function() { \n    ok(true, 'adapters/user.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/authenticators/parse-email.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - authenticators');\n  test('authenticators/parse-email.js should pass jshint', function() { \n    ok(true, 'authenticators/parse-email.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/authorizers/parse.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - authorizers');\n  test('authorizers/parse.js should pass jshint', function() { \n    ok(true, 'authorizers/parse.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/controllers/chips-in-play.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/chips-in-play.js should pass jshint', function() { \n    ok(true, 'controllers/chips-in-play.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/controllers/comment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/comment.js should pass jshint', function() { \n    ok(true, 'controllers/comment.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/controllers/dashboard.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/dashboard.js should pass jshint', function() { \n    ok(true, 'controllers/dashboard.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/controllers/discuss.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/discuss.js should pass jshint', function() { \n    ok(true, 'controllers/discuss.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/controllers/login.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/login.js should pass jshint', function() { \n    ok(true, 'controllers/login.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/controllers/pre-flop-raise.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/pre-flop-raise.js should pass jshint', function() { \n    ok(true, 'controllers/pre-flop-raise.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/controllers/register.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/register.js should pass jshint', function() { \n    ok(true, 'controllers/register.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/helpers/resolver', ['exports', 'ember/resolver', 'benchmark-poker/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('benchmark-poker/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/helpers/start-app', ['exports', 'ember', 'benchmark-poker/app', 'benchmark-poker/router', 'benchmark-poker/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('benchmark-poker/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/initializers/current-user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/current-user.js should pass jshint', function() { \n    ok(true, 'initializers/current-user.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/models/comment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/comment.js should pass jshint', function() { \n    ok(true, 'models/comment.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/models/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/user.js should pass jshint', function() { \n    ok(true, 'models/user.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/routes/chips-in-play.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/chips-in-play.js should pass jshint', function() { \n    ok(true, 'routes/chips-in-play.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/routes/dashboard.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/dashboard.js should pass jshint', function() { \n    ok(true, 'routes/dashboard.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/routes/discuss.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/discuss.js should pass jshint', function() { \n    ok(true, 'routes/discuss.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/index.js should pass jshint', function() { \n    ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/routes/login.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/login.js should pass jshint', function() { \n    ok(true, 'routes/login.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/routes/pre-flop-raise.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/pre-flop-raise.js should pass jshint', function() { \n    ok(true, 'routes/pre-flop-raise.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/routes/register.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/register.js should pass jshint', function() { \n    ok(true, 'routes/register.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/test-helper', ['benchmark-poker/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('benchmark-poker/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/adapters/chips-in-play-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"adapter:chips-in-play\", \"ChipsInPlayAdapter\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('benchmark-poker/tests/unit/adapters/chips-in-play-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/chips-in-play-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/chips-in-play-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/adapters/register-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"adapter:register\", \"RegisterAdapter\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('benchmark-poker/tests/unit/adapters/register-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/register-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/register-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/bankroll-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:bankroll\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/bankroll-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/bankroll-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/bankroll-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/chipsinplay-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:chipsinplay\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/chipsinplay-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/chipsinplay-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/chipsinplay-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/comment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:comment\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/comment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/comment-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/comment-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/dashboard-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:dashboard\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/dashboard-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/dashboard-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/dashboard-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/discuss-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:discuss\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/discuss-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/discuss-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/discuss-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/equity-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:equity\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/equity-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/equity-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/equity-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/hands-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:hands\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/hands-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/hands-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/hands-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/location-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:location\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/location-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/location-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/location-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/login-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:login\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/login-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/login-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/login-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/opponents-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:opponents\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/opponents-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/opponents-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/opponents-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/pre-flop-raise-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:pre-flop-raise\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/pre-flop-raise-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/pre-flop-raise-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/pre-flop-raise-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/controllers/register-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:register\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/controllers/register-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/register-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/register-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/initializers/current-user-test', ['ember', 'benchmark-poker/initializers/current-user', 'qunit'], function (Ember, current_user, qunit) {\n\n  'use strict';\n\n  var container, application;\n\n  qunit.module(\"CurrentUserInitializer\", {\n    beforeEach: function beforeEach() {\n      Ember['default'].run(function () {\n        application = Ember['default'].Application.create();\n        container = application.__container__;\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  qunit.test(\"it works\", function (assert) {\n    current_user.initialize(container, application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n\n});","define('benchmark-poker/tests/unit/initializers/current-user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/initializers');\n  test('unit/initializers/current-user-test.js should pass jshint', function() { \n    ok(true, 'unit/initializers/current-user-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/models/register-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"register\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('benchmark-poker/tests/unit/models/register-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/register-test.js should pass jshint', function() { \n    ok(true, 'unit/models/register-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/adapter-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:adapter\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/adapter-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/adapter-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/adapter-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:application\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/application-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/application-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/bankroll-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:bankroll\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/bankroll-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/bankroll-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/bankroll-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/dashboard-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:dashboard\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/dashboard-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/dashboard-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/dashboard-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/discuss-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:discuss\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/discuss-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/discuss-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/discuss-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/equity-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:equity\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/equity-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/equity-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/equity-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/hands-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:hands\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/hands-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/hands-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/hands-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:index\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/index-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/location-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:location\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/location-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/location-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/location-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/login-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:login\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/login-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/login-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/login-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/opponents-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:opponents\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/opponents-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/opponents-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/opponents-test.js should pass jshint.'); \n  });\n\n});","define('benchmark-poker/tests/unit/routes/pre-flop-raise-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:pre-flop-raise\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('benchmark-poker/tests/unit/routes/pre-flop-raise-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/pre-flop-raise-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/pre-flop-raise-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('benchmark-poker/config/environment', ['ember'], function(Ember) {\n  var prefix = 'benchmark-poker';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"benchmark-poker/tests/test-helper\");\n} else {\n  require(\"benchmark-poker/app\")[\"default\"].create({\"name\":\"benchmark-poker\",\"version\":\"0.0.0.7eee5f6c\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACljBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxrdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"benchmark-poker.js"}